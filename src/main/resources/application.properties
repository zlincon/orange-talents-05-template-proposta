spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
enderecos-externos.base-url=${base-url-integracoes}
spring.jpa.properties.javax.persistence.query.timeout=50

# aqui vai ser ajustado com o tempo
# tempo para chegar do outro lado
feign.client.config.pagador-fake.connect-timeout=100
# tempo máximo para esperar voltar
feign.client.config.pagador-fake.read-timeout=100

#health
management.endpoint.health.show-details=always
spring.cloud.discovery.client.composite-indicator.enabled=false
management.endpoints.web.exposure.include=info,health,prometheus
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
management.endpoints.prometheus.enabled=true


# scheduler
periodicidade.associa-proposta-cartao=10000

# external service
proposta.services.analise-financeira.host=${ANALISE_FINANCEIRA_HOST:http://localhost}
proposta.services.analise-financeira.port=${ANALISE_FINANCEIRA_PORT:9999}

proposta.services.sistema-cartao.host=${SISTEMA_CARTAO_HOST:http://localhost}
proposta.services.sistema-cartao.port=${SISTEMA_CARTAO_PORT:8888}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}
keycloak.auth-server-url=http://localhost:18080/auth

logging.level.br.com.zupacademy.lincon.proposta=debug
